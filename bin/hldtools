#!/bin/bash

show_help(){
    help="  NAME
    hldtools - script to convet .hld files into .root

  SYNOPSIS
    hldtools [OPTION]... [FILE]

  DESCRIPTION 
     -x 
        run decoding, mz calibration, GSI and A tree creation (default)
     -d 
        run decoding
     -c 
        run calibration
     -a 
        run A tree creation
     -o 
        make it all smart (do not run conversion and calibration if it is already done) 
     -b 
        build libs
     -j
        number of threads 
     -l
        use latest *.hld file in current folder 
     -q 
        batch processing option 
        1 run hldtools -j10 -d for undecoded .hld files in current folder.
        101 run hldtools -j10 -d for all .hld files in current folder.
        2 run tcalibration -j10 -c calib_1910_1.root -r818 for not calibrated .hld.root files in current folder.
        3 run tcalibration -j10 -c calib_1910_1.root -r817 for not calibrated .hld.root files in current folder.
        102 run tcalibration -j10 -c calib_1810_1.root for all .hld.root files in current folder 
        5 run on the cluster
        one needs to be logged in on hera  
     -s 
        start event
     -e 
        end event"
    echo "$help" 
}

OPTIND=1 
while getopts "h?xdc:azobj:q:s:e:f:l" opt; do
    case "$opt" in
	h|\?)
            show_help
            exit 0
            ;;
	x)  option=0
            ;;
	d)  option=1
            ;;
	c)  calibrationOpt=$OPTARG
            ;;
	a)  option=3 
            ;;
	z)  option=4
            ;;
	o)  option=11
            ;;
	b)  option=10
            ;;
	j)  threads=$OPTARG
            ;;
	q)  batchmode=$OPTARG
            ;;
	s)  startEvent=$OPTARG
            ;;
	e)  endEvent=$OPTARG
            ;;
	l)  latestFile=1
	    ;;
    esac
done
option=${option:-0}
startEvent=${startEvent:-0}
endEvent=${endEvent:-0} 
threads=${threads:-1}
calibrationOpt=${calibrationOpt:-0}
batchmode=${batchmode:-0}

shift $((OPTIND-1))

if [ "$calibrationOpt" -eq 1 ]; then
    option=2
fi
calibrationOpt=1
fileName=$1

cd $ROOT5_PATH; source  bin/thisroot.sh; cd - > /dev/null

if [ $latestFile ]; then
    fileName=$(ls -t *.hld | head -1);
fi

if (( $batchmode==5 )); then
    for x in $(find `pwd` -name '*.hld'); do
	if [ ! -f "${x%.*}M.root" ]; then
	    qsub qconverthld.sge $x
	fi
    done
    exit 0
fi

if (( $batchmode == 1 || $batchmode == 101 )); then
    lasthld=$(ls -tr *.hld | tail -n 1)
#   for x in $(ls *.hld); do
    for x in $(find -maxdepth 1 -name '*.hld' -mmin +1 | xargs echo); do
	if [ ! -f "${x%.*}.hld.root" ] && [ "$x" != "$lasthld" ] || [ $batchmode == 101 ]; then
	    hldtools -j5 -d $x
	fi
    done
    exit 0
fi

if (( $batchmode == 2 || $batchmode == 102  )); then
    for x in $(ls *.hld.root); do
	if [ ! -f  ${x%.*.*}"C.root" ] || [ $batchmode == 102 ]; then
	    tcalibration -j5 -m5 -c /d/oct2016/laser/calib_2310_2_tof.root $x
	fi
    done
    exit 0
fi

if (( $batchmode == 3 || $batchmode == 103 )); then
    for x in $(ls *.hld.root); do
	if [ ! -f  ${x%.*.*}"C.root" ] || [ $batchmode == 103 ]; then
	    tcalibration -j10 -r817 -c /d/oct2016/laser/calib_1910_1.root $x
	fi
    done
    exit 0
fi

if [ ! $fileName ]; then
    show_help
    exit 0
fi

if [ ! -f $fileName ]; then
    echo "File $fileName not found. Exit"
    exit 0
fi

inFile=$(readlink -f $fileName)
inName=$(basename $inFile)
inDir=$(dirname $inFile)/

cd $HOME/dirc/mz-unpacker

waitForMe (){
    while : 
    do
	sleep .1
	activth=$(ps aux | grep "[r]oot.exe" | grep "Convert.C" | grep "$2" | wc -l)
	printf "\r$statusline [$activth] ---- [$(($(date +%s) - start_time)) s] "
	if [ "$activth" -lt "$1" ]; then 
	    break  
	fi
    done
}

if [ "$threads" -gt 0 ]; then
    total=$(root -l -q "GetHldEntries.C(\"$inDir\",\"$inName\")" | grep delmeme | cut -c 8-)
    
    if (( $endEvent != 0)); then
	total=$endEvent	
    fi

    echo "=====  $total triggers in $fileName ====="

    fileId="${inName%.*}"
    step=$(echo "$total/$threads" |bc)

    if (( $option == 1 || $option == 0 || $option == 4 )); then  ####################################
	statusline="Decod"      
	start_time=$(date +%s)
	for ((i=0;i<$threads;i++)); do
	    startEvent=$(echo "$step*$i" |bc)
	    endEvent=$(echo "$step*($i+1)-1" |bc)
	    if (( $i == $threads-1 )); then 
		endEvent=$total 
	    fi
	    root -l -b -q "Convert.C(\"$inDir\",\"$inName\",\"${inName}${i}j.root\",${startEvent},${endEvent},1)" 1> /dev/null 2> /dev/null &
#	    waitForMe $threads
	done

	waitForMe "1" "${inName}"
	printf "\r$statusline [1] merg [$(($(date +%s) - start_time)) s] "
	
	rm -f "$inDir$inName.root"
	list="$inDir$inName"*j.root
	hadd "$inDir$inName.root" $list >/dev/null 2>/dev/null
	rm $list
	
	printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s] \n"
    fi

    if (( ($option == 2 || $option == 0 ) && calibrationOpt != 0 )); then  ####################################
	statusline="Calib"
	start_time=$(date +%s)
	root -l -b -q "Convert.C(\"$inDir\",\"${inName}\",\"${inName}$i.root\",0,${total},2,${calibrationOpt})" > /dev/null &
	waitForMe "1" "${inName}"
	printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s] \n"
    fi
    
    if (( $option == 3 || $option == 0 )); then  ####################################
	statusline="Atree"
	start_time=$(date +%s)

	for ((i=0;i<$threads;i++)); do
	    startEvent=$(echo "$step*$i" |bc)
	    endEvent=$(echo "$step*($i+1)-1" |bc)
	    if (( $i == $threads-1 )); then 
		endEvent=$total 
	    fi
	    root -l -b -q "Convert.C(\"$inDir\",\"$inName\",\"${fileId}.A${i}j.root\",${startEvent},${endEvent},3,${calibrationOpt})" > /dev/null & 
	done

	waitForMe "1" "${fileId}"
	printf "\r$statusline [-] merg [$(($(date +%s) - start_time)) s] "
	
	rm -f "$inDir$fileId".A.root
	list="$inDir$fileId".A*j.root
	hadd "$inDir${fileId}.A.root" $list >/dev/null 2>/dev/null
	rm $list  2>/dev/null
	printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s] \n"
    fi

  #    if (( $option == 4 )); then  ####################################
# 	statusline="cdata"      
# 	start_time=$(date +%s)
	
# 	str=$(root -l -q -b loadprtlibs.C nentries.C"(\"$inFile\")")
# 	echo $str
# 	str=$(echo $str |tr -d '\040\n\r')
# 	total=$(echo $str | sed -r 's/.*[^0-9]([0-9]+)$/\1/')
# 	step=$(echo "$total/$threads" |bc)
# 	root -l -q loadprtlibs.C tcalibration.C++'("","","","", 0,0,0,0,1)'  > /dev/null 2>/dev/null
# 	for ((i=0;i<$threads;i++)); do
# 	        startEvent=$(echo "$step*$i" |bc)
# 	    endEvent=$(echo "$step*($i+1)-1" |bc)
# 	    if (( $i == $threads-1 )); then 
# 		endEvent=$total 
# 	    fi
# 	    root -l -q loadprtlibs.C tcalibration.C+"(\"$inFile\",\"$inDir${fileId}${suf}j$i.root\",\"$cFile\", \"$tFile\", $refChannel,$startEvent,$endEvent,$mode)" > /dev/null  2>/dev/null &
	   
# #	    waitForMe $threads
# 	done

# 	waitForMe "1" "${inName}"
# 	printf "\r$statusline [1] merg [$(($(date +%s) - start_time)) s] "

# 	rm -f "${inDir}${fileId}${suf}".root
# 	list="${inDir}${fileId}${suf}j"*.root
# 	hadd  "${inDir}${fileId}${suf}.root" $list >/dev/null 2>/dev/null
# 	rm $list

# 	printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s] \n"
#      fi
  
else
    echo "ONE JOB"
    if (( $endEvent != 0)); then
	endEvent=1000	
    fi
    root -l -b -q "Convert.C(\"$inDir\",\"$inName\",\"${inName}.root\",${startEvent},${endEvent},${option})"
fi

