#!/bin/bash

show_help(){
  help="  NAME
    ba_scan - script to run sim/reco for prtdirc

  SYNOPSIS
    ba_scan [OPTION]

  DESCRIPTION 
     -r 
        run type
        0 - run decoding
        1 - run calibration
        2 - run proc
     -j
        number of threads 
     -s 
        study
        0 - all
        # - study id
     -n 
        silent run"
    echo "$help" 
}

OPTIND=1 
while getopts "h?r:j:s:n" opt; do
    case "$opt" in
	h|\?)
            show_help
            exit 0
            ;;
	j)  threads=$OPTARG
            ;;
	s)  study=$OPTARG
	    ;;
	r)  run=$OPTARG
            ;;
	n)  silent=1
            ;;
    esac
done
threads=${threads:-6}
run=${run:-0}
study=${study:-1}
silent=${silent:-0}

shift $((OPTIND-1))

printf "====== Run dirc data processing ======\n"

if [ ${run} == "0" ]; then
    cd $study
    for x in $(ls *.hld); do
	if [ ! -f "${x%.*}.hld.root" ]; then
	    hldtools -j10 -d $x
	fi
    done
    exit
fi

if [ ${run} == "1" ]; then
    cd $study
    for x in $(ls *.hld.root); do
	if [ ! -f  ${x%.*.*}"C0.root" ]; then
	   tcalibration -j10 -c ../calib/calibf_june.root -t ../calib/calibo_june.root -j10 $x
	fi
    done
    exit
fi

waitForMe (){
    while : 
    do 
	activth=$(ps aux | grep "[r]oot" | grep "procData" | wc -l)
	printf "\r$statusline [$activth] ---- [$(($(date +%s) - start_time)) s] "
	sleep .1
	if [ "$activth" -lt "$1" ]; then 
	    break  
	fi
    done
}  

runOneStudy (){
    OIFS="$IFS"
    IFS=$'\n'

    file=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,0)" 2>/dev/null))
    path=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,1)" 2>/dev/null))
    info=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,2)" 2>/dev/null))

    args=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,3)" 2>/dev/null))
    outs=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,4)" 2>/dev/null))
    reco=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,6)" 2>/dev/null))
    
    IFS="$OIFS"
    cd ~/dirc/prttools

    start_time=$(date +%s)
    statusline="run study $1"

    root -l -q loadprtlibs.C procData.C++ > log 2> log &
    
    for ((k=1;k<${#file[@]};k++)); do
	root -l -q -b loadprtlibs.C procData.C+"(${reco[k]})" > log 2> log &
	waitForMe $threads
    done
    waitForMe "1"

    cd -
    cd $1
    
    sleep 2
    rm -f res_${1}.root
    hadd res_${1}.root *.root.res.root
    rm -f *.root.res.root
    
    printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]     \n"
}  


for ((i=150;i<200;i++)); do
    if (( i != $study &&  $study != 0 )); then
	continue
    fi
    runOneStudy $i
done


